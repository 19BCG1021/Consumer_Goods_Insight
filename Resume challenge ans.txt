2 ans.

SELECT ft20.A as unique_product_2020, ft21.B as unique_product_2021  , ROUND((B-A)*100/A,2) as percentage_change
FROM
(
(SELECT count(distinct product_code) as A
FROM fact_sales_monthly
WHERE fiscal_year = 2020 ) ft20 ,

(SELECT count(distinct product_code) as B
FROM fact_sales_monthly
WHERE fiscal_year = 2021 ) ft21
)

3 ans.

                SELECT segment ,COUNT(distinct (product_code)) as product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count desc;       

4 ans.

               WITH CTE AS 
	(SELECT P.segment AS A , COUNT(DISTINCT(FS.product_code)) AS B 
    FROM dim_product P, fact_sales_monthly FS
    WHERE P.product_code = FS.product_code
    GROUP BY FS.fiscal_year, P.segment
    HAVING FS.fiscal_year = "2020"),
CTE1 AS
    (
	SELECT P.segment AS C , COUNT(DISTINCT(FS.product_code)) AS D 
    FROM dim_product P, fact_sales_monthly FS
    WHERE P.product_code = FS.product_code
    GROUP BY FS.fiscal_year, P.segment
    HAVING FS.fiscal_year = "2021"
    )     
    
SELECT CTE.A AS segment, CTE.B AS product_count_2020, CTE1.D AS product_count_2021, (CTE1.D-CTE.B) AS difference  
FROM CTE, CTE1
WHERE CTE.A = CTE1.C ;

5 ans.

                   SELECT F.product_code , P.product, F.manufacturing_cost
FROM fact_manufacturing_cost F
INNER JOIN dim_product P
ON F.product_code= P.product_code
WHERE manufacturing_cost
       IN ( SELECT max(manufacturing_cost) 
            FROM fact_manufacturing_cost
           union
            SELECT min(manufacturing_cost) 
            FROM fact_manufacturing_cost
		  )
ORDER BY manufacturing_cost DESC ;

6 ans.
                
                        WITH cte AS (
SELECT customer_code AS  A,AVG(fact_pre_invoice_deductions.pre_invoice_discount_pct)*100 AS B
FROM fact_pre_invoice_deductions 
WHERE fiscal_year= '2021'
GROUP BY customer_code
),
CTE1 as (
SELECT customer_code AS C , customer AS D 
FROM dim_customer
WHERE market = 'India')

SELECT CTE1.C AS customer_code , cte1.D AS customer, ROUND(cte.B,2) AS avg_discount_percentage
FROM cte
JOIN CTE1
ON cte.A= cte1.C
ORDER BY avg_discount_percentage desc
LIMIT 5

7 ans.

              SELECT CONCAT(MONTHNAME(FS.date), ' (', YEAR(FS.date), ')') AS 'Month', FS.fiscal_year,
       ROUND(SUM(G.gross_price*FS.sold_quantity), 2) AS Gross_sales_Amount
FROM fact_sales_monthly FS JOIN dim_customer C ON FS.customer_code = C.customer_code
						   JOIN fact_gross_price G ON FS.product_code = G.product_code
WHERE C.customer = 'Atliq Exclusive'
GROUP BY  Month, FS.fiscal_year 
ORDER BY FS.fiscal_year ;

8 ans.

             SELECT 
      CASE
		   WHEN date BETWEEN '2019-09-01' AND '2019-11-30' then 1  
		   WHEN date BETWEEN '2019-12-01' AND '2020-02-27' then 2
           WHEN date BETWEEN '2020-03-01' AND '2020-05-31' then 3
           WHEN date BETWEEN '2020-06-01' AND '2020-08-31' then 4
      END AS Quarters,
      SUM(fact_sales_monthly.sold_quantity) AS total_sold_quantity
  
 FROM fact_sales_monthly
 WHERE fiscal_year= '2020'
 GROUP BY Quarters
 ORDER BY total_sold_quantity DESC

9 ans.

             WITH CTE AS
(
SELECT C.channel,
       ROUND(SUM(G.gross_price*FS.sold_quantity/1000000), 2) AS Gross_sales_mln
FROM fact_sales_monthly FS 
JOIN dim_customer C 
ON FS.customer_code = C.customer_code
JOIN fact_gross_price G 
ON FS.product_code = G.product_code
WHERE FS.fiscal_year = 2021
GROUP BY channel
)
SELECT channel, CONCAT(Gross_sales_mln,' M') AS Gross_sales_mln , CONCAT(ROUND(Gross_sales_mln*100/total , 2), ' %') AS percentage
FROM
(
(SELECT SUM(Gross_sales_mln) AS total FROM CTE) A,
(SELECT * FROM CTE) B
)
ORDER BY percentage DESC  

10 ans.

                 WITH CTE AS (
              SELECT P.division, P.product_code,p.product, SUM(sm.sold_quantity) as total_sold_quantity
              FROM dim_product p
              INNER JOIN fact_sales_monthly sm
              ON p.product_code= sm.product_code
              WHERE fiscal_year= '2021'
              group by sm.product_code,division,p.product
),
CTE1 AS(
     SELECT division,product_code, total_sold_quantity ,
     RANK() OVER (PARTITION BY division ORDER BY total_sold_quantity DESC) AS 'Rank_Order'
     FROM CTE
)
SELECT CTE.division, CTE.product_code , cte.product, cte.total_sold_quantity,CTE1.Rank_Order
FROM CTE
JOIN CTE1
ON cte.product_code= CTE1.product_code
WHERE CTE1.Rank_Order IN (1,2,3)